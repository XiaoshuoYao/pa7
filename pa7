    Color[] fgPixels = {new Color(64, 124, 224), new Color(64, 124, 224), new Color(64, 124, 224)};
    Image fgImage1 = new Image (10, 10, fgPixels);
    Image overlay1 = ImageLib.overlay(fgImage1, exampleImage, 1, 0);
    Color[] overlay1PixelsExpected = {new Color(255, 0 ,0)};
    System.out.println("overlay1 image:   " + overlay1.toString());
    System.out.println("overlay1 image expect:	Image[width=3, height=3]");
    System.out.println("overlay1 pixels:	" + Arrays.toString(overlay1.getPixels()));
    System.out.println("overlay1 pixels expect:   " + Arrays.toString(overlay1PixelsExpected));

    Image fgImage2 = new Image (1, 3, fgPixels);
    Image overlay2 = ImageLib.overlay(fgImage1, exampleImage, 2, 0);
    Color[] overlay2PixelsExpected = {new Color(255, 0 ,0)};
    System.out.println("overlay2 image:   " + overlay2.toString());
    System.out.println("overlay2 image expect:	Image[width=3, height=3]");
    System.out.println("overlay2 pixels:	" + Arrays.toString(overlay2.getPixels()));
    System.out.println("overlay2 pixels expect:   " + Arrays.toString(overlay2PixelsExpected));

    Image overlaycrane = ImageLib.overlay(fgImage1, crane, 2, 2);
    CSE8ALib.explore(overlaycrane);


public static Color[] framePixels(int width, int height, Image original, int thickness, Color color){
  int imageWidth = original.getWidth();
  int imageHeight = original.getHeight();

  int size = width*height;

  Color[] newArray = new Color[size];
  for(int col=0 ; col <width; col+=1){
	for(int row=0; row < height; row+=1){
  	if( col>= thickness && col < thickness+ imageWidth && row>=thickness && row < thickness + imageHeight  ){
    	newArray[row*width+col] = original.getPixels()[(row-thickness)*imageWidth + (col-thickness)];
  	}
  	else {
    	newArray[row*width + col] = color;
  	}
	}
  }
  return newArray;
  }
  public static Image frame(Image original, int thickness, Color color){
	int width = 2*thickness+original.getWidth();
	int height = 2*thickness+original.getHeight();
	Color[] pixels = ImageLib.framePixels(width, height, original, thickness, color  );
	return new Image(width, height, pixels);
  }
